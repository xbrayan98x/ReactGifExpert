{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","props","categorias","cat","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,EAjCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAkBzC,OACI,0BAAMC,SAVe,SAACC,GAEtBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAMlB,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBkB,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAClC,OACI,yBAAKc,UAAU,6DACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCAJO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECFd,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAcxC,OAPAC,qBAAW,WACRxB,EAASC,GAAYwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACxCf,KAAMkB,EACNL,SAAS,SAEb,CAAEpB,IAEEqB,EDT0BK,CAAc1B,GAAlCa,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QASrB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,aACb,yBAAKA,UAAU,aAEXH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eAAaiB,IAAMjB,EAAIC,IAAUD,UEOtCkB,EA5BM,SAAAC,GAAU,IAAD,EAEU3C,mBAAU,IAFpB,mBAEnB4C,EAFmB,KAEP7C,EAFO,KAM1B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAMQ6C,EAAWrB,KAAK,SAAAsB,GAAG,OACf,kBAAC,EAAD,CAASJ,IAAMI,EAAM/B,UAAY+B,U,MCjBzDC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5d3c178a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ( { setCategorias } ) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) =>{\n        \n        setInputValue( e.target.value );\n    }\n\n    const handleSearchSbmt = (e) =>{\n        \n        e.preventDefault();\n        if ( inputValue.trim().length > 2 ) {\n            setCategorias( cats => [ inputValue, ...cats ] );\n            setInputValue('');\n        }       \n    }\n    //KMYJgPaBHpV7IiEBaCJJWlzKnIDaKTHh\n    return (\n        <form onSubmit={ handleSearchSbmt }>\n        <input \n            type=\"text\"\n            value={ inputValue }\n            onChange={ handleInputChange }\n        />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategorias: PropTypes.func.isRequired,\n}\n\nexport default AddCategory;","\nexport const getGifs = async( categoria ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=10&api_key=KMYJgPaBHpV7IiEBaCJJWlzKnIDaKTHh`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url} ) => {\n    return (\n        <div className=\"card animate__animated animate__flipInX animate__delay-1s\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n//import React, { useState, useEffect } from 'react'\nimport { GifGridItem } from './GifGridItem';\n//import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({ categoria }) => {\n\n    //const [ imgs, setImages ] = useState( [] );\n    const { data:images, loading } = useFetchGifs( categoria );\n\n    /*useEffect( () => {\n        getGifs( categoria )\n            //.then( imgs => setImages( imgs) );\n            .then( setImages );\n    }, [ categoria ]);\n    */\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ categoria }</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading..</p>}\n            <div className=\"card-grid\">\n            {\n                images.map( img => ( \n                    <GifGridItem key={ img.id } { ...img } />\n                ))\n            }\n            </div>\n        </>\n    )\n}\n","\nimport { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( categoria ) =>{\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n       getGifs( categoria ).then( imgs => setState({\n           data: imgs,\n           loading: false,\n       }));\n    }, [ categoria ]);\n\n    return state; // { data:true, loading:true }\n}","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = props => {\n\n    const [categorias, setCategorias] = useState( [] );\n    //const handleAdd = () => setCategorias( cats => [...cats, 'brayan'] );\n    //<button onClick={ handleAdd }>handleAdd</button\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategorias={ setCategorias } />\n            <hr />\n           \n            <ol>\n                {\n                    //categorias.map( cat => {\n                    //return <li key={ cat }>{ cat }</li>\n                    //})\n\n                    categorias.map( cat => ( \n                        <GifGrid key={ cat } categoria={ cat} /> \n                    ))\n                }\n            </ol>\n        </>\n        \n    )\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}